https://financedata.github.io/index.html
https://github.com/financedata
https://wikidocs.net/4374

Dataframe examples 가장 잘 되어 있다.
https://www.tutorialspoint.com/python_pandas/python_pandas_dataframe.htm



메모나 하자.
current_price 에서 상위 종목 현재가를 가지고 올 수 있다.
1분에 한 번씩 돌려도 전혀 무리가 없다.
market_cap 에서 순위를 가지고 올 수 있다. 약 900개 넘는다.

코스닥 상위종목은 어떻게 가지고 오냐면...
아... current_price 에 나오는게 결국 순위네.
==> current_price.py 를 수정하여 가지고 올 수 있도록 했다.
==> 기능에 맞는 소스 구조로 리펙터링이 한 번 필요하다.


음...
그러면 market_daily 에서 6000개의 데이터를 가지고 오므로
...


다시 생각하자.

## 로직
1. 시가총액 상위 n 개를 구한다. 코스피, 코스닥 다르게 할 수 있다.
1. 종목별로 dataframe 으로 핸들링 할 수 있는 데이터를 만든다.
1. 52주 최고가를 찾는다.



## 이게 될까?
* 안되겠지
* 많은 책들도 있고 어쩌고 저쩌고 하지만... 잘 되면 직접했겠지 왜 책쓰고 블로그에 글 쓰고 그랬겠어.
* 그렇다고 포기하기는 싫고... 뭔가... 있을 것 같고 말이야 ㅋㅋㅋ
* 일정 조건이 되면 사는거지. 그리고 일정 조건이 되면 파는거지
* 그렇게 사고 팔다보면 손해나겠지 ㅋㅋㅋ
*

## 자동매매는 안된다.
* 내게 도움이 되는 지표만 확인한다.
* 여태 내가 이익을 보았던 방법은 장투이며 회귀이다.
* 많이 떨어진 종목 중에 다시 오르는 상품들을 파악해서 나에게 알려주는 시스템을 만들자.

## 방향
* 회귀
* 알람
### 데이터 크롤링
* 다행이 해결되었음.
* 매일 매일 돈다.
#### 프로세스
* 시가총액 200 목록을 가지고 온다.
* 각 item 의 일자별 HLOC 데이터를 디스크에서 찾는다.
    * 없으면 다운로드
    * 있으면 냅둬.
* 오후 4시에
### 매수 포인트
* 특정 기준이상 떨어진 상품을 찾는다.
* 안전한 투자를 원하므로 코스피 200 안에서만 찾는다.
==> 돈 벌려면 코스피가 아닌 코스닥에서 해야 한다. 왜냐하면 등락의 폭이 크다.
* 많이 떨어진 상품들 중에 어떤 상품을 투자할 것인가?
* 내가 여태 투자했던 방법은 과거에 높았는데, 근래 몇 개월 사이에 떨어진 상품들이다.
* 그 상품들이 더 떨어질지 앞으로 오를지 어떻게 아냐?
* 이평선을 보아야하나?
* 시스템을 완성하면 테스트 해 볼 수 있다.
* 과거 최댓값 확인
* 조건은 눈으로 좀 보고 확인하자.


### 시나리오 1
* 범위:3년치를 본다.
* 떨어지기 전까지는 상승 추세이다. 60일 이평선 보면 되나?
* 떨어진 금액이 특정 범위의 평균이나 이평선? 뭐든 기준보다 작아야한다.
* 하락했다가 다시 반등한 종목을 추려서 확인하고
* 하락했다가 반등 없이 계속 하락한 종목을 추려서 확인하자.

### 오름
1. 서서히 오름
2. 갑자기 오름

### 판매 시점
* 주가는 오르다 내리다 오르다 내리다 한다.
* NHN 의 주식의 경우 여태 1년정도를 가지고 있었다...
* 남들은 최저가를 어떻게 찾지?
* 아... 남들이 찾는 최저가 포인트를 알아보자.
* 이 주식은 너무 많이 올랐어. 아마 이정도 선이 적정 선일거야?라고 말하는 기준은?
* PER : 큰 경우-순이익에 비해 주식 가격이 높음, 낮은 경우 - 순이익에 비해 주식 가격이 낮다.
* ROE : 자기자본이익률 - 높으면 좋음
* EPS : 주단순이익 - 높으면 좋음
* PBR : 자가순자산비율  - 높으면 좋은가?


pip freeze > requirements.txt